#! /usr/bin/env node

const inquirer = require('inquirer');
const path = require('path');
const chalk = require('chalk');
const fs = require('fs');
const child_process = require('child_process');
const pkg = require(path.resolve(process.cwd(), 'package.json')) || {};
const config = require('./config');
const questions = [
  {
    type: 'input',
    name: 'name',
    message: 'What\'s your project name. ',
    default: function() {
      return pkg.name || ''
    }
  },
  {
    type: 'list',
    name: 'type',
    message: 'which environment will you publish, daily or publish？',
    choices: ['daily', 'publish']
  },
  {
    type: 'input',
    name: 'version',
    message: 'Please input the project version, i.e. "1.0.1". ',
    validate: function(version) {
      if(/^([0-9]{1,2}\.){2}[0-9]{1,2}$/.test(version)) {
        var files = [];
        try {
          // git文件取branch得优化下。
          files = fs.readdirSync(path.resolve(process.cwd(), config.gitDirBranch));
        } catch(err) {
          console.log(`\n\n  ${chalk.red('The git files is non-existent!')}`);
          process.exit(0);
        }
        if (~files.indexOf(version)) {
          return true;
        }
        return 'the version is non-existent, input again！'
      }
      return 'Please input the correct version, i.e. "1.0.1"'
    }
  }
];

function execSh(commands) {
  commands.forEach(function(item) {
    console.log((`\n${chalk.cyan('executing:')} ${item.command}`));
    var output;
    try {
      output = child_process.execSync(item.command, { encoding: 'utf8' });

    } catch(err) {
      console.log(err.stdout);
    }
    output && process.stdout.write(output);
  });
}

function pub() {
  inquirer.prompt(questions).then(function(content) {
    execSh(config.commands(content));
    console.log(chalk.green(`  publish "${content.type}/${content.version}" successfully!`));
  });
}

pub();
